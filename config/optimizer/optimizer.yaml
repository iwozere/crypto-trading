# Optimizer Configuration Schema
# This schema defines the structure and validation rules for optimizer configurations

# Basic configuration settings
data_dir: string  # Directory containing input data
results_dir: string  # Directory for storing optimization results
strategy_name: string  # Name of the strategy class
optimizer_name: string  # Name of the optimizer class
symbol: string  # Trading pair symbol (e.g., "BTCUSDT")
interval: string  # Timeframe interval (e.g., "1h", "4h", "1d")
start_date: string  # Start date for optimization (YYYY-MM-DD)
end_date: string  # End date for optimization (YYYY-MM-DD)

# Trading parameters
initial_capital: float  # Initial capital for backtesting
commission: float  # Trading commission rate (e.g., 0.001 for 0.1%)
risk_free_rate: float  # Risk-free rate for Sharpe ratio calculation
omega_threshold: float  # Minimum Omega ratio threshold

# Optimization settings
optimization_settings:
  optimization_method: string  # Optimization method (e.g., "optuna" or "skopt". "grid" is not supported yet.)
  n_trials: integer  # Number of optimization trials
  n_jobs: integer  # Number of parallel jobs (-1 for all cores)
  random_state: integer  # Random seed for reproducibility

# Exit logic configuration
exit_logic:
  name: string  # Name of the exit strategy
  params:  # Exit strategy parameters
    # ATR-based exit
    sl_mult:
      type: string  # Parameter type ("Real" or "Integer")
      low: float  # Lower bound
      high: float  # Upper bound
    tp_mult:
      type: string
      low: float
      high: float
    # Trailing stop exit
    trail_pct:
      type: string
      low: float
      high: float
    # MA crossover exit
    ma_period:
      type: string
      low: integer
      high: integer
    # Time-based exit
    time_period:
      type: string
      low: integer
      high: integer
    # Fixed SL/TP exit
    rr:
      type: string
      low: float
      high: float
    sl_pct:
      type: string
      low: float
      high: float

# Search space definition
search_space:
  - type: string  # Parameter type ("Real" or "Integer")
    name: string  # Parameter name
    low: number  # Lower bound
    high: number  # Upper bound

# Default parameters
default_params:
  param_name: value  # Default value for each parameter

# Visualization settings
visualization_settings:
  plot: boolean  # Whether to generate plots
  save_trades: boolean  # Whether to save trade history
  plot_size: [integer, integer]  # Plot dimensions [width, height]
  use_talib: boolean  # Whether to use TA-Lib for calculations

# Validation rules
validation_rules:
  required_fields:
    - data_dir
    - results_dir
    - strategy_name
    - optimizer_name
    - symbol
    - interval
    - start_date
    - end_date
    - initial_capital
    - commission
    - risk_free_rate
    - omega_threshold
    - optimization_settings
    - exit_logic
    - search_space
    - default_params
    - visualization_settings

  numeric_ranges:
    initial_capital: {min: 0}
    commission: {min: 0, max: 1}
    risk_free_rate: {min: 0, max: 1}
    omega_threshold: {min: 0}

  optimization_settings:
    n_trials: {min: 1}
    n_jobs: {min: -1}

  search_space:
    type: ["Real", "Integer"]
    low: {type: number}
    high: {type: number}

  exit_logic:
    name: ["atr_exit", "trailing_stop_exit", "ma_crossover_exit", "time_based_exit", "fixed_sl_tp_exit"]

# Example configurations for different exit strategies
examples:
  fixed_sl_tp_exit:
    exit_logic:
      name: "fixed_sl_tp_exit"
      params:
        rr: {type: "Real", low: 1.5, high: 4.0}
        sl_pct: {type: "Real", low: 0.01, high: 0.05}
  
  atr_exit:
    exit_logic:
      name: "atr_exit"
      params:
        sl_mult: {type: "Real", low: 1.0, high: 3.0}
        tp_mult: {type: "Real", low: 1.0, high: 5.0}
  
  trailing_stop_exit:
    exit_logic:
      name: "trailing_stop_exit"
      params:
        trail_pct: {type: "Real", low: 0.01, high: 0.05}
  
  ma_crossover_exit:
    exit_logic:
      name: "ma_crossover_exit"
      params:
        ma_period: {type: "Integer", low: 10, high: 50}
  
  time_based_exit:
    exit_logic:
      name: "time_based_exit"
      params:
        time_period: {type: "Integer", low: 3, high: 30} 